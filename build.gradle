buildscript {
	ext {
		kotlinVersion = '1.2.51'
		springBootVersion = '2.0.6.RELEASE'
		graphQLSpringBoot = "5.0.2"
        axonVersion = '3.3.3'
		graphQLTools = '5.2.4'

	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/kotlin/main")
    }
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.axonframework:axon-spring-boot-starter:${axonVersion}")
	implementation ("com.graphql-java:graphiql-spring-boot-starter:${graphQLSpringBoot}")
	implementation ("com.graphql-java:graphql-java-tools:${graphQLTools}")
	implementation("org.springframework.boot:spring-boot-devtools")
	implementation "com.graphql-java:graphql-spring-boot-starter:${graphQLSpringBoot}"
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	compile("com.h2database:h2")
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}
